name: CI/CD Pipeline

env:
    SERVICE_NAME: bmr-calculator
    IMAGE_NAME: "gcr.io/${{ secrets.GCP_PROJECT_ID }}/bmr-calculator"
    IMAGE_TAG: staging

on:
  push:
    branches:
      - main

jobs:
  build-test:
    name: Bld, Format, Lint, Test, Report
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Step 3: Install dependencies (app, dev, and testing dependencies)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy Flask pytest pytest-cov flake8 black coverage  # Dev/testing dependencies

      # Step 4: Run code formatting check with Black
      - name: Check code formatting with Black
        run: |
          black --check .

      # Step 4: Run code formatting check with Black
      - name: Formatting with Black
        run: |
          black .

      # Step 5: Run code linting with Flake8
      - name: Lint code with Flake8
        run: |
          flake8 . -v

      # Step 6: Run unit tests and generate a coverage report
      - name: Run tests with Pytest and generate coverage report
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term

      # Step 7: Upload coverage report as an artifact
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          verbose: true

      # Step 8: Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-to-staging:
    name: Deployig to Staging
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.7
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      
      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2.1.2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Build and Push Docker Image to Container Registry
        run: |
          gcloud auth configure-docker
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ./app
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Output the Cloud Run URL
        run: |
          echo "Cloud Run URL:"
          gcloud run services describe bmr-calculator-staging --platform managed --region us-central1 \
            --format 'value(status.url)'